openapi: 3.1.0
info:
  title: Application Preferences (Example OpenAPI)
  description: ...
  version: 0.1.2
  contact:
    name: Example
    url: https://www.example.com/contact-us
    email: api@example.com.com
  termsOfService: https://www.example.com/API-License-Agreement.pdf
  license:
    name: API License
    url: https://www.example.com/API-License-Agreement.pdf
servers:
  - url: /example
tags:
  - name: Preferences
    description: Application Preferences
paths:
  /users/{appId}/preferences:
    summary: Application preferences
    description: A user's preferences for an application
    parameters:
      - $ref: '#/components/parameters/appIdPathParam'
    get:
      summary: Return preferences for an application
      description: ...
      operationId: listPreferences
      tags:
        - Preferences
      parameters:
        - name: categories
          description: >-
            Filter preferences to only those whose `category` is in this
            pipe-separated list.
          in: query
          style: pipeDelimited
          schema:
            type: array
            minItems: 1
            maxItems: 16
            examples:
              - - Presentation
              - - Presentation
                - Notifications
            items:
              type: string
        - name: type
          description: >-
            Filter preferences only those whose `type` is in this pipe-separated
            list.
          in: query
          style: pipeDelimited
          schema:
            type: array
            minItems: 1
            maxItems: 4
            uniqueItems: true
            items:
              type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/preferences'
            application/pdf:
              schema:
                type: string
                contentMediaType: application/pdf
                contentEncoding: base64
                maxLength: 5000000
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          description: >-
            Unprocessable Entity. The request body and/or query parameters were
            well formed but otherwise invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/problemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/problemResponse'
      security:
        - accessToken:
            - scope1
            - scope2
            - scope3
            - scope4
  /users/{appId}/public-preferences:
    parameters:
      - $ref: '#/components/parameters/appIdPathParam'
    get:
      summary: Return public preferences for an application, without auth
      description: ...
      operationId: listPublicPreferences
      tags:
        - Preferences
      parameters:
        - name: categories
          description: >-
            Filter preferences to only those whose `category` is in this
            pipe-separated list.
          in: query
          style: pipeDelimited
          schema:
            type: array
            minItems: 1
            maxItems: 16
            examples:
              - - Presentation
              - - Presentation
                - Notifications
            items:
              type: string
        - name: type
          description: >-
            Filter preferences only those whose `type` is in this pipe-separated
            list.
          in: query
          style: pipeDelimited
          schema:
            type: array
            minItems: 1
            maxItems: 4
            uniqueItems: true
            items:
              type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/preferences'
            application/pdf:
              schema:
                type: string
                contentMediaType: application/pdf
                contentEncoding: base64
                maxLength: 5000000
components:
  securitySchemes:
    accessToken:
      type: openIdConnect
      description: >-
        OpenId Connect (OIDC) authentication/authorization.
      openIdConnectUrl: https://auth.example.com/openidConnectDiscovery
  parameters:
    appIdPathParam:
      name: appId
      description: >-
        The unique identifier of an application. This is an opaque string.
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/resourceId'
  responses:
    '400':
      description: >-
        Bad Request. The request body, request headers, and/or query parameters
        are not well-formed.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/badRequest
            title: Bad Request
            status: 400
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: Input did not parse as JSON
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
        application/json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/badRequest
            title: Bad Request
            status: 400
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: Input did not parse as JSON
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
    '401':
      description: Unauthorized. The operation require authentication but none was given.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/unauthorized
            title: Unauthorized
            status: 400
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: The request lacks valid authentication credentials
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
        application/json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/unauthorized
            title: Unauthorized
            status: 401
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: The request lacks valid authentication credentials
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
    '403':
      description: >-
        Forbidden. The authenticated caller is not authorized to perform the
        requested operation.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/forbidden
            title: Forbidden
            status: 403
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: >-
              The request has valid authentication, but the authenticated agent
              is forbidden from accessing this resource or operation
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
        application/json:
          schema:
            $ref: '#/components/schemas/problemResponse'
          example:
            type: https://www.example.com/errors/forbidden
            title: Forbidden
            status: 403
            occurredAt: '2022-04-25T12:42:21.375Z'
            detail: >-
              The request has valid authentication, but the authenticated agent
              is forbidden from accessing this resource or operation
            instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
      headers:
        WWW-Authenticate:
          description: >-
            Indicates the additional [authentication scheme(s) and
            parameters](https://datatracker.ietf.org/doc/html/rfc7235#section-4.1)
            applicable to the target resource/operation.
          schema:
            type: array
            items:
              type: string

  schemas:
    preferenceFields:
      title: Preference Fields
      description: >-
        Properties of a Preference resource.
        This schema is used to construct other schemas.
      type: object
      properties:
        name:
          description: The name of the preference.
          type: string
          maxLength: 40
        value:
          description: The value of the preference.
          type: string
          maxLength: 256
        type:
          description: The preference type.
          type: string
        updatedAt:
          description: >-
            The date-time when this preference was last modified [RFC
            3339](https://tools.ietf.org/html/rfc3339) `date-time` format. This is
            derived and immutable.
          $ref: '#/components/schemas/readOnlyResourceId'
          example: '2023-01-06T09:39:48.375Z'
        memo:
          description: The user-settable memo.
          type: string
          maxLength: 80
        category:
          description: The category of the preference.
          type: string
          maxLength: 40
      example:
        name: theme
        value: dark
        updatedAt: '2023-01-06T09:46:06.375Z'
        memo: I like dark themes
        category: Presentation

    preferenceItem:
      title: Preference Item
      description: >-
        Summary representation of a preference resource in preferences
        collections.
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/abstractBody'
        - $ref: '#/components/schemas/preferenceFields'
        - type: object
          properties:
            id:
              description: >-
                The unique identifier for this preference resource. This is an
                immutable opaque string.
              allOf:
                - $ref: '#/components/schemas/readOnlyResourceId'
      examples:
        - id: 88f5bf17-ecc4
          name: theme
          value: dark
          updatedAt: '2023-01-06T09:46:06.375Z'
          memo: I like dark themes
          category: Presentation
        - id: fdde09c08d689c7ac5d4
          name: layout
          value: dense
          updatedAt: '2023-01-06T09:48:38.375Z'
          category: Presentation

    preferences:
      title: List of Preferences
      description: >-
        The list of preferences for an application.
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/abstractBody'
        - type: object
          properties:
            items:
              description: An array containing preference items.
              type: array
              items:
                $ref: '#/components/schemas/preferenceItem'
      example:
        items:
          - id: 88f5bf17-ecc4
            name: theme
            value: dark
            updatedAt: '2023-01-06T09:46:06.375Z'
            memo: I like dark themes
            category: Presentation
          - id: fdde09c08d689c7ac5d4
            name: layout
            value: dense
            updatedAt: '2023-01-06T09:48:38.375Z'
            category: Presentation
    problemResponse:
      title: Problem Response (v0.3.0)
      description: >-
        API problem or error response, as per [RFC 7807
        application/problem+json](https://tools.ietf.org/html/rfc7807).
      type: object
      allOf:
        - $ref: '#/components/schemas/abstractBody'
        - $ref: '#/components/schemas/apiProblem'
      example:
        type: https://www.examplecom/errors/noSuchApplication
        title: Application Not Found
        status: 422
        occurredAt: '2022-04-25T12:42:21.375Z'
        detail: No application exists for the given preference reference
        instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
    resourceId:
      title: Resource Identifier
      description: >-
        The unique, opaque system identifier for a resource. This case-sensitive
        ID is also used as path parameters in URLs or in other properties or
        parameters that reference a resource by ID rather than URL.
      type: string
      pattern: ^[-_:.~$a-zA-Z0-9]+$
      minLength: 6
      maxLength: 48
    readOnlyResourceId:
      title: Read-only Resource Identifier
      description: >-
        The unique, opaque system-assigned identifier for a resource. This
        case-sensitive ID is also used in URLs as path parameters or in other
        properties or parameters that reference a resource by ID rather than
        URL. Resource IDs are immutable.
      readOnly: true
      allOf:
        - $ref: '#/components/schemas/resourceId'
    abstractBody:
      title: Abstract Body
      description: >-
        An abstract schema used to define other request and response body model
        schemas.
      type: object
      properties: {}
      example: {}
    apiProblem:
      title: API Problem
      description: >-
        API problem or error, as per [RFC 7807
        application/problem+json](https://tools.ietf.org/html/rfc7807).
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: >
            A [URI reference (RFC3986)](https://tools.ietf.org/html/rfc7807)
            that identifies the problem type. If present, this is the URL of
            human-readable HTML documentation for the problem type. When this
            member is not present, its value is assumed to be `"about:blank"`.
          example: https://www.example.com/errors/connectionError
        title:
          type: string
          description: >
            A short, human-readable summary of the problem type. The title is
            usually the same for all problem with the same `type`.
          example: >-
            User is not authorized to perform the requested action or access the
            requested resource.
        status:
          type: integer
          format: int32
          description: >
            The [HTTP status
            code](https://datatracker.ietf.org/doc/html/rfc7231#section-6) for
            this occurrence of the problem.
          minimum: 100
          maximum: 599
          example: 403
        detail:
          type: string
          description: >
            A human-readable explanation specific to this occurrence of the
            problem.
          example: User is not authorized to perform this operation.
        instance:
          type: string
          format: uri-reference
          description: >
            A URI reference that identifies the specific occurrence of the
            problem. This is the URI of an API resource that the problem is
            related to, with a unique error correlation ID URI fragment
          example: >-
            https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
        id:
          description: >-
            The unique identifier for this problem. This is an immutable opaque
            string.
          allOf:
            - $ref: '#/components/schemas/readOnlyResourceId'
        occurredAt:
          description: >-
            The timestamp when the problem occurred, in [RFC
            3339](https://tools.ietf.org/html/rfc3339) date-time
            `YYYY-MM-DDThh:mm:ss.sssZ` format, UTC.
          $ref: '#/components/schemas/readOnlyTimestamp'
        problems:
          description: >-
            Optional root-causes if there are multiple problems in the request
            or API call processing.
          type: array
          items:
            $ref: '#/components/schemas/apiProblem'
        attributes:
          type: object
          description: >-
            Additional optional attributes related to the problem. This data
            conforms to the schema associated with the error type.
          additionalProperties: true
      example:
        type: https://example.com/errors/applicationNotFound
        title: Application Not Found
        status: 422
        occurredAt: '2022-04-25T12:42:21.375Z'
        detail: No application exists for the given application ID
        instance: https://api.example.com/example/applications/bb116eff493f4d2a91c5/preferences
    readOnlyTimestamp:
      title: Read-Only Timestamp
      description: >-
        A readonly or derived timestamp (an instant in time) formatted in [RFC
        3339](https://tools.ietf.org/html/rfc3339) `date-time` UTC format:
        `YYYY-MM-DDThh:mm:ss.sssZ`.<br>The schema `readOnlyTimestamp` was added
        on version `0.4.0` of the API.
      type: string
      minLength: 20
      maxLength: 30
      format: date-time
      readOnly: true
      example: '2021-10-30T19:06:04.250Z'
      $comment: >-
        minlength is for no milliseconds, such as
        '2021-10-30T19:06:00Z'
        maxLength is for '.' plus up to 9 digits for milliseconds,
        such as '2021-10-30T19:06:04.999000999Z'
